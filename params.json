{
  "name": "Gnuplot-Helper",
  "tagline": "A Perl script that generates decent looking gnuplot scripts. ",
  "body": "gnuplot-helper\r\n==============\r\n\r\nA Perl script that generates gnuplot scripts from a simpler custom data format. It only requires gnuplot. If you want the generated plots to be in PDF format, it also requires the epstopdf program.    \r\n\r\n**Note:** The script currently just creates line plots (not bar or pie charts).\r\n\r\n###Usage\r\n\r\nTo create a gnuplot (.gnu) script, you need to first write a description file (see an example [here](/examples/example_of_plot_data.data)). Here is a list of common options.\r\n\r\nOption  | What it does\r\n------------- | -------------\r\nname [txt] | The name of the plot\r\ntitle [txt] | The title of the plot\r\ny-label [txt] | Label for y-axis\r\nx-label [txt] | Label for x-axis\r\nuse-log  | Makes the x-axis to be in log scale\r\nuse-lenget [txt]  | Add a legent\r\nrange [txt] | Range of x-axis \r\nmode [txr] | color or mono\r\nuse-nice-colors | Better line colors\r\ntics | spacing for the x-tics\r\nadd [text] | Add this gnuplot command\r\nlsize | Line size (e.g., 2)\r\npsize | Point size (e.g., 2)\r\n\r\nTo run: \r\n```bash\r\n> plot_data.pl myfile.data\r\n```\r\n\r\n\r\n\r\n###Plot examples\r\n\r\n![AccuracyPlot.pdf](/examples/AccuracyPlot.jpg \"Optional Title\")\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}